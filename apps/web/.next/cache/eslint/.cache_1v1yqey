[{"/Users/jack/Documents/Programming/reporank/apps/web/pages/index.tsx":"1","/Users/jack/Documents/Programming/reporank/apps/web/pages/[owner]/[repo].tsx":"2","/Users/jack/Documents/Programming/reporank/apps/web/pages/[owner]/index.tsx":"3","/Users/jack/Documents/Programming/reporank/apps/web/pages/_app.tsx":"4","/Users/jack/Documents/Programming/reporank/apps/web/pages/_document.tsx":"5","/Users/jack/Documents/Programming/reporank/apps/web/components/bars/navbar.tsx":"6","/Users/jack/Documents/Programming/reporank/apps/web/components/bars/repobar.tsx":"7","/Users/jack/Documents/Programming/reporank/apps/web/components/bars/userbar.tsx":"8","/Users/jack/Documents/Programming/reporank/apps/web/components/metrics/metricCard.tsx":"9","/Users/jack/Documents/Programming/reporank/apps/web/components/metrics/metricGroup.tsx":"10","/Users/jack/Documents/Programming/reporank/apps/web/components/tiers/tierIcon.tsx":"11","/Users/jack/Documents/Programming/reporank/apps/web/components/defaults/defaultLoading.tsx":"12","/Users/jack/Documents/Programming/reporank/apps/web/pages/404.tsx":"13","/Users/jack/Documents/Programming/reporank/apps/web/components/defaults/defaultError.tsx":"14"},{"size":1102,"mtime":1675642800115,"results":"15","hashOfConfig":"16"},{"size":5315,"mtime":1671510094101,"results":"17","hashOfConfig":"16"},{"size":2569,"mtime":1671490085828,"results":"18","hashOfConfig":"16"},{"size":1337,"mtime":1675642704854,"results":"19","hashOfConfig":"16"},{"size":801,"mtime":1675642701097,"results":"20","hashOfConfig":"16"},{"size":1007,"mtime":1675641500883,"results":"21","hashOfConfig":"16"},{"size":1304,"mtime":1671490431214,"results":"22","hashOfConfig":"16"},{"size":966,"mtime":1669290415049,"results":"23","hashOfConfig":"16"},{"size":1198,"mtime":1671136692914,"results":"24","hashOfConfig":"16"},{"size":1114,"mtime":1671136704093,"results":"25","hashOfConfig":"16"},{"size":603,"mtime":1669290415050,"results":"26","hashOfConfig":"16"},{"size":418,"mtime":1671508527264,"results":"27","hashOfConfig":"16"},{"size":227,"mtime":1671510241745,"results":"28","hashOfConfig":"16"},{"size":1336,"mtime":1671510002256,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7oyevr",{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jack/Documents/Programming/reporank/apps/web/pages/index.tsx",[],"/Users/jack/Documents/Programming/reporank/apps/web/pages/[owner]/[repo].tsx",["59"],"import { ActionIcon, Anchor, AppShell, Box, Card, Checkbox, CheckIcon, Container, Divider, Flex, Grid, Popover, Progress, SimpleGrid, Skeleton, Space, Text, ThemeIcon, Title, useMantineTheme } from \"@mantine/core\";\nimport Link from \"next/link\";\nimport { useRouter } from \"next/router\";\nimport { ArrowUpRight } from \"tabler-icons-react\";\nimport Navbar from \"../../components/bars/navbar\";\nimport Repobar from \"../../components/bars/repobar\";\nimport { getRepo, Repo as RepoData, RRError } from \"@reporank/algs\";\nimport MetricGroupSection, { MetricGroup } from \"../../components/metrics/metricGroup\";\nimport { useEffect, useState } from \"react\";\nimport Head from \"next/head\";\nimport DefaultLoading from \"../../components/defaults/defaultLoading\";\nimport DefaultError from \"../../components/defaults/defaultError\";\n\nconst PRIMARY_COL_HEIGHT = 300;\n\nexport default function Repo() {\n\n    const router = useRouter();\n    const { owner, repo } = router.query;\n\n    const [data, setData] = useState<RepoData>();\n    const [error, setError] = useState<RRError>();\n\n    let title = 'Loading...';\n\n    useEffect(() => {\n        if(owner && repo) {\n            title = `${owner as string}/${repo as string}`;\n            getRepo(owner as string, repo as string)\n            .then(data => setData(data))\n            .catch(error => setError(error))\n        }\n    }, [owner, repo]);\n \n    if (!data && !error) return <DefaultLoading title={title}/>\n    if (!data && error) return <DefaultError error={error}/>\n\n    return (\n        <AppShell\n            padding={0}\n            navbar={<Box style={{ position: \"sticky\" }}>\n            </Box>}\n            header={<Navbar />}\n        >\n            <Head>\n                <title>{title}</title>\n            </Head>\n            <>\n                <Repobar owner={owner as string} repo={repo as string} tier=\"B\" points={40000}/>\n                <Container size=\"xl\" mt=\"md\">\n                    {/* Main Content */}\n                    <Title>About</Title>\n                    <Divider mt=\"sm\" mb=\"md\" />\n                    <SimpleGrid cols={2} spacing=\"md\" breakpoints={[{ maxWidth: 'sm', cols: 1 }]}>\n                        <Card withBorder>\n                            af\n                        </Card>\n                        <Grid gutter=\"md\">\n                            <Grid.Col>\n                                <Card withBorder>\n                                    <Title order={4}>Owner</Title>\n                                    <Skeleton visible={!data} width=\"70%\">\n                                        <Flex style={{ alignItems: \"baseline\" }}>\n                                            <Title>{data && data.about.owner || \"Ad\"}</Title>\n                                            {/* View owner in new tab */}\n                                            <Link href={`https://github.com/${owner}`} passHref>\n                                                <ActionIcon variant=\"subtle\" color=\"teal\">\n                                                    <ArrowUpRight size={24}/>\n                                                </ActionIcon>\n                                            </Link>\n                                        </Flex>\n                                    </Skeleton>\n                                </Card>\n                            </Grid.Col>\n                            <Grid.Col span={6}>\n                                <Card withBorder>\n                                    <Title order={4}>Type</Title>\n                                    <Skeleton visible={!data} width=\"80%\">\n                                        <Title>{data && data.about.type || \"As\"}</Title>\n                                    </Skeleton>\n                                </Card>\n                            </Grid.Col>\n                            <Grid.Col span={6}>\n                                <Card withBorder>\n                                    <Title order={4}>Primary language</Title>\n                                    <Skeleton visible={!data} width=\"80%\">\n                                        <Flex style={{ alignItems: \"baseline\" }}>\n                                            <Title>{data && data.about.language || \"Ads\"}</Title>\n                                            {/* View language in new tab */}\n                                            <Link href={`https://github.com/topics/${data && data.about.language || \"Ads\"}`} passHref>\n                                                <ActionIcon variant=\"subtle\" color=\"teal\">\n                                                    <ArrowUpRight size={24}/>\n                                                </ActionIcon>\n                                            </Link>\n                                        </Flex>\n                                    </Skeleton>\n                                </Card>\n                            </Grid.Col>\n                        </Grid>\n                    </SimpleGrid>\n\n                    <Title mt=\"lg\">Metrics</Title>\n                    <Divider mt=\"sm\" mb=\"md\"/>\n                    {data && data.metrics.map((group) => <>\n                        <MetricGroupSection group={group} />\n                        <Space mt=\"xl\" mb=\"md\" />\n                    </>)}\n                </Container>\n            </>\n        </AppShell>\n    );\n}\n","/Users/jack/Documents/Programming/reporank/apps/web/pages/[owner]/index.tsx",[],"/Users/jack/Documents/Programming/reporank/apps/web/pages/_app.tsx",[],"/Users/jack/Documents/Programming/reporank/apps/web/pages/_document.tsx",[],"/Users/jack/Documents/Programming/reporank/apps/web/components/bars/navbar.tsx",[],"/Users/jack/Documents/Programming/reporank/apps/web/components/bars/repobar.tsx",[],"/Users/jack/Documents/Programming/reporank/apps/web/components/bars/userbar.tsx",[],"/Users/jack/Documents/Programming/reporank/apps/web/components/metrics/metricCard.tsx",[],"/Users/jack/Documents/Programming/reporank/apps/web/components/metrics/metricGroup.tsx",[],"/Users/jack/Documents/Programming/reporank/apps/web/components/tiers/tierIcon.tsx",[],"/Users/jack/Documents/Programming/reporank/apps/web/components/defaults/defaultLoading.tsx",[],"/Users/jack/Documents/Programming/reporank/apps/web/pages/404.tsx",[],"/Users/jack/Documents/Programming/reporank/apps/web/components/defaults/defaultError.tsx",[],{"ruleId":"60","severity":1,"message":"61","line":28,"column":21,"nodeType":"62","endLine":28,"endColumn":59},"react-hooks/exhaustive-deps","Assignments to the 'title' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","TemplateLiteral"]